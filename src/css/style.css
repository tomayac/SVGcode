/**
 * SVGcode—Convert raster images to SVG vector graphics
 * Copyright (C) 2021 Google LLC
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 */

:root {
  /* stylelint-disable custom-property-pattern */
  --100vh: 100vh;
  --space: 0.25rem;
  --mobile-breakpoint: 414px;
  --menu-height: 5ex;
  --sidebar-width: 15rem;
  --input-image-height: 5rem;
  --input-width: 10rem;
  --main-accent-color: #e60073;
  --alternative-accent-color: #337eff;
  --sidebar-background-color: rgb(255 255 255 / 80%);
  --canvas-text: #000;
  --canvas: #fff;

  color-scheme: dark light;
  accent-color: var(--main-accent-color);
  font-family: system-ui, sans-serif;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html,
body {
  overscroll-behavior: none;
  overflow: hidden;
  width: 100vw;
  height: var(--100vh);
  max-height: var(--100vh);
  max-width: 100vw;
}

body {
  margin: 0;
  padding: 0;
}

main {
  padding: var(--space);
  display: flex;
  height: 100%;
}

main.window-controls-overlay {
  margin-block-start: env(titlebar-area-height);
}

input {
  margin-inline-start: 0;
  margin: 3px 3px;
}

input[type='range'] {
  display: inline-block;
  width: var(--input-width);
}

canvas {
  display: none;
}

progress {
  min-width: 10rem;
}

canvas.debug {
  width: auto;
  height: var(--input-image-height);
  display: block;
  margin-inline-start: var(--space);
  margin-block-start: calc(
    var(--menu-height) + 4 * var(--space) + var(--input-image-height)
  );
  position: absolute;
  right: var(--space);
  z-index: 1;
  cursor: default;
}

summary,
label,
button,
details {
  font-family: inherit;
  font-size: inherit;
  white-space: nowrap;
  user-select: none;
  cursor: pointer;
  margin-block-end: var(--space);
}

details {
  margin-block-end: calc(2 * var(--space));
  padding-inline-end: var(--space);
  overflow: hidden auto;
  scrollbar-width: none;
}

summary {
  color: var(--alternative-accent-color);
  display: flex;
  align-content: center;
  height: 28px;
  margin-block: calc(2 * var(--space));
}

summary::-webkit-details-marker {
  display: none;
}

summary::marker {
  content: '';
}

.main > summary {
  display: none;
}

details::-webkit-scrollbar {
  display: none;
}

details[open] {
  flex-shrink: 0;
}

summary::after {
  margin-inline-start: var(--space);
  font-size: 1.1rem;
}

details:not([open], .main) > summary::after {
  content: '▶';
}

details[open]:not(.main) > summary::after {
  content: '▼';
}

details.main .close-options-button {
  display: none;
  position: fixed;
  right: 1.25rem;
  margin: 0.5rem 0 0;
  width: 2.2rem;
  height: 2.2rem;
  z-index: 1;
  font-size: 1rem;
}

@media (max-width: 414px) {
  summary,
  label,
  button,
  details {
    font-size: 0.9rem;
  }

  details.main {
    position: absolute;
    margin-inline-start: var(--space);
    margin-block-start: calc(var(--menu-height) + 4 * var(--space));
    padding: var(--space);
    z-index: 2;
  }

  details[open].main {
    width: 100vw;
    max-height: calc(var(--100vh) - var(--menu-height) - 9 * var(--space));
  }

  details[open].main > .sidebar {
    max-width: calc(100% - var(--space) * 4);
    backdrop-filter: saturate(180%) blur(20px);
    background-color: var(--sidebar-background-color);
  }

  details.main > summary {
    display: flex;
    align-items: center;
    place-content: center;
    background-color: transparent;
    border: solid 1px currentcolor;
    border-radius: var(--space);
    padding: var(--space);
    cursor: pointer;
  }

  /* Make the summary occupy the whole space so clicking anywhere closes. */
  details.main[open] > summary {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: var(--100vh);
    cursor: auto;
    z-index: -1;
    opacity: 0;
  }

  details.main[open] .close-options-button {
    display: inline-block;
  }
}

.input-image {
  width: auto;
  height: var(--input-image-height);
  object-fit: contain;
  position: absolute;
  right: var(--space);
  margin-inline-start: var(--space);
  margin-block-start: calc(var(--menu-height) + 2 * var(--space));
  z-index: 1;
  cursor: default;
  user-select: none;
}

.input-image:hover,
canvas.debug:hover {
  transform: scale(2);
  transform-origin: top right;
  z-index: 2;
  cursor: zoom-in;
}

summary svg {
  fill: var(--alternative-accent-color);
}

.checkerboard {
  background-position: 0 0, calc(2 * var(--space)) calc(2 * var(--space));
  background-size: calc(4 * var(--space)) calc(4 * var(--space));
  background-image: linear-gradient(
      45deg,
      #eee 25%,
      transparent 25%,
      transparent 75%,
      #eee 75%,
      #eee 100%
    ),
    linear-gradient(45deg, #eee 25%, white 25%, white 75%, #eee 75%, #eee 100%);
}

.pinch-zoom-wrapper {
  width: 100%;
  height: 100%;
}

pinch-zoom {
  width: 100%;
  height: 100%;
  position: absolute;
  cursor: grab;
}

pinch-zoom > * {
  position: absolute;
  inset: 0;
  visibility: hidden;
}

.pinch-zoom-wrapper > svg {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

/*
@ToDo: The performance goes down when the stroke-width is > 0.

.pinch-zoom-wrapper > svg:hover:not(.interactive) path:not(:hover) {
  opacity: 50%;
}

.pinch-zoom-wrapper > svg:hover:not(.interactive) path:hover {
  opacity: 100%;
}
*/

.icon {
  margin-inline-end: var(--space);
  display: flex;
  align-items: center;
}

.icon svg {
  width: 2.5ex;
  height: 2.5ex;
  fill: currentcolor;
  background-color: transparent;
}

label {
  font-variant-numeric: tabular-nums;
}

button {
  height: 3ex;
  display: inline-flex;
  align-items: center;
  place-content: center;
  background-color: transparent;
  border: solid 1px currentcolor;
  border-radius: var(--space);
  margin-inline-end: var(--space);
  cursor: pointer;
  padding: 1px 6px;
  margin: unset;
}

button.with-bg {
  background-color: #fff;
}

button.menu {
  border: none;
  width: max-content;
  flex-shrink: 0;
  margin-inline-end: calc(4 * var(--space));
}

button.install {
  display: none;
}

summary:hover,
label:hover,
button:hover {
  color: var(--main-accent-color);
}

.preprocess {
  display: flex;
  flex-direction: column;
  height: 100%;
}

.preprocess-input {
  display: flex;
  flex-direction: column;
  margin: var(--space);
}

.other-input {
  display: flex;
  align-items: center;
  margin: var(--space);
  height: 3ex;
}

.other-input.advanced,
.preprocess-input.advanced {
  display: none;
}

.sidebar {
  display: flex;
  flex-direction: column;
  padding: var(--space);
  gap: var(--space);
  min-width: var(--sidebar-width);
}

.link-list {
  list-style: none;
  margin-block-start: var(--space);
  padding-inline-start: var(--space);
  line-height: 2;
}

.link-list > li {
  display: inline-block;
}

.link-list > li:not(:last-of-type)::after {
  content: '•';
}

.link-list a {
  color: var(--canvas-text);
  text-decoration: none;
}

.link-list a:hover {
  color: var(--main-accent-color);
}

.menu {
  width: 100%;
  height: var(--menu-height);
  flex-shrink: 0;
  align-items: center;
  display: flex;
  overflow: auto hidden;
  gap: var(--space);
  scrollbar-width: none;
}

.menu.window-controls-overlay {
  position: absolute;
  padding-block-start: calc(2 * var(--space));
  left: env(titlebar-area-x);
  top: env(titlebar-area-y);
  width: env(titlebar-area-width);
  height: env(titlebar-area-height);
  -webkit-app-region: drag;
}

.window-controls-overlay button,
.window-controls-overlay label {
  -webkit-app-region: no-drag;
  font-size: 0.9rem;
}

.menu::-webkit-scrollbar {
  display: none;
}

.main-area {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: var(--space);
  flex-grow: 1;
  overflow: hidden;
}

.dropenter::before {
  display: grid;
  place-items: center;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: #fffe;
  content: attr(data-drop-text);
  position: absolute;
}

.toast {
  background-color: var(--canvas);
  align-self: center;
  border: solid 1px var(--canvas-text);
  padding: var(--space);
  position: absolute;
  bottom: 5ex;
}

@media (prefers-color-scheme: dark) {
  :root {
    --main-accent-color: hotpink;
    --sidebar-background-color: rgb(0 0 0 / 80%);
    --canvas-text: #fff;
    --canvas: #131313;

    background-color: var(--canvas);
    color: var(--canvas-text);
  }

  .dropenter::before {
    background-color: #131313dd;
  }

  .monochrome svg {
    filter: invert(100%);
  }

  output {
    border: 1px #000 solid;
  }

  button {
    color: #fff;
  }

  button.with-bg {
    background-color: #000;
  }

  .checkerboard {
    background-image: linear-gradient(
        45deg,
        #131313 25%,
        transparent 25%,
        transparent 75%,
        #131313 75%,
        #131313 100%
      ),
      linear-gradient(
        45deg,
        #131313 25%,
        #000 25%,
        #000 75%,
        #131313 75%,
        #131313 100%
      );
  }
}
